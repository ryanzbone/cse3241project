-- Part C INSERT syntax

-- Books can be inserted directly
INSERT INTO Book
            (isbn,
             price,
             title,
             pid,
             year,
             length)
VALUES      (0316066525,
             19.99,
             'Infinite Jest',
             142,
             1996,
             1079);

-- Publisher requires name, entity, publisher records
INSERT INTO Names
(fname,
             mname,
             lname)
VALUES      ('OSU UniPrint',
             '',
             '');

INSERT INTO entity
            (email,
             phone,
             country,
             city,
             state,
             postalcode,
             address,
             nameid)
SELECT 'uniprint@osu.edu',
       '6142922219',
       'United States',
       'Columbus',
       'OH',
       '43201',
       '1739 N. High Street',
       id
FROM   names
WHERE  fname = 'OSU UniPrint';

INSERT INTO publisher
            (eid,
             slogan)
SELECT e.id           AS eid,
       'Go Buckeyes!' AS slogan
FROM   entity e,
       names n
WHERE  e.nameid = n.id
  AND  n.fname = 'OSU UniPrint';

-- Author requires name, entity entries
INSERT INTO Names
            (fname,
             mname,
             lname)
VALUES      ('David',
             'Foster',
             'Wallace');

INSERT INTO entity
            (nameid)
SELECT id
FROM   names
WHERE  fname = 'David'
       AND mname = 'Foster'
       AND lname = 'Wallace';

-- Associate book with author
INSERT INTO bookauthor
            (isbn,
             nameid)
SELECT 9780316074230,
       id
FROM   names
WHERE  fname = 'David'
       AND mname = 'Foster'
       AND lname = 'Wallace';

-- Customer requires name, entity, customer entries
INSERT INTO Names
(fname,
            mname,
            lname)
VALUES      ('Bob',
            '',
            'Smith');
-- Then, the entity relationship is changed with the new name:
INSERT INTO Entity
           (nameid)
SELECT id
FROM   names
WHERE  fname = 'Bob'
      AND mname = ''
      AND lname = 'Smith';

-- Lastly, the Customer table gets a reference to the new entity:
INSERT INTO Customer
           (eid)
SELECT E.id
FROM   Names N, Entity E
WHERE  E.nameid = N.id
    AND fname = 'Bob'
    AND mname = ''
    AND lname = 'Smith';

-- Part D

-- Book
-- Given a book isbn:

DELETE FROM book
WHERE  isbn = 321125169;

-- Author
-- Deleting an author from the names table will cascade down to delete it’s related entity, bookauthor and book entries:

DELETE FROM names
WHERE  ( fname = 'David'
         AND mname = 'Foster'
         AND lname = 'Wallace' );

-- Publisher
-- Deleting a publisher name entry will cascade down to delete the publisher’s entity entry and any books they’ve published:

DELETE FROM names
WHERE  ( fname = 'OSU UniPrint' );

-- Customer
-- Deleting the customer name will remove its associated entity and any orders, monetary transactions and associated order contents:
DELETE FROM names
WHERE  id = 140;

-- Warehouse
-- Deleting the warehouse name will remove it’s associated entity, employees and inventory:

DELETE FROM names
WHERE  id = 204;

-- Employee
-- Deleting the employee name from the names table will delete the entry’s associated entity and any other employees that reference the deleted one:

DELETE FROM names
WHERE  fname = 'Employee 1'
       AND mname = ''
       AND lname = '';

-- Order
-- Deleting an order will delete any associated ordercontents:

DELETE FROM customerorder
WHERE  id = 1;

-- Rating
-- The rating information is removed from the rating table:

DELETE FROM rating
WHERE  rating.cid = 140
       AND rating.bid = '112233445566'

-- Credit Card
-- The credit card information is removed from the credit card table:

DELETE FROM creditcard
WHERE  cc_num = '3530111333300000';

-- MonetaryTransaction
-- Deleting from monetarytransaction will delete the associated customer order and that order’s contents

DELETE FROM MonetaryTransaction
WHERE       id = 2940947;

-- But can also be done if, for example, the date, time, and customer are known:

DELETE FROM MonetaryTransaction
WHERE  MonetaryTransaction.timestamp > '2014-08-02 21:00:00'
AND MonetaryTransaction.timestamp < '2014-08-02 22:00:00'
    AND MonetaryTransaction.epayee IN
(SELECT MonetaryTransaction.epayee
 FROM   Names AS N, Entity AS E, MonetaryTransaction
 WHERE  n.fname = 'Bob'
 AND n.lname = 'Smith'
 AND E.nameid = N.id
 AND MonetaryTransaction.epayee = E.id);

-- Book Category
-- Entire categories may be deleted:

DELETE FROM bookcategory
WHERE  category = 'Science'

-- Or the category for a single book:

DELETE FROM bookcategory
WHERE  category = 'Science'
       AND isbn = '067463442X';

-- Book Description

DELETE FROM bookdescription
WHERE  bookdescription.isbn = '1561584029';

-- Order Contents

DELETE FROM ordercontents
WHERE  ordercontents.oid = 1;

-- Inventory
-- Given an isbn and a warehouse id:
DELETE FROM inventory
WHERE  bid = 1558605525
       AND wid = 216;

-- Entity
-- Given an entity id (this will delete anything that references this entity, be careful):
DELETE FROM entity

WHERE  id = 244;

-- Names
-- Names are deleted from the Names table directly (this will delete the entity referencing the name and anything referencing that entity, be careful):

DELETE FROM names
WHERE  fname = 'Bob'
AND lname = 'Smith';
